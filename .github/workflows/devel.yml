name: Devel

on: 
    workflow_dispatch:
    schedule:
    # Run the job once a week
    - cron: '0 0 * * 0'

env:
  REGISTRY: ghcr.io
  REPOSITORY_NAME: ${{ github.repository }}
  REPOSITORY_OWNER: ${{ github.repository_owner }}
  DOCKERHUB_OWNER: ${{ secrets.DOCKERHUB_USERNAME }}
    
jobs:
  build:
    name: build devel and master images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout docker-deployment-images
        uses: actions/checkout@v4
        
      - name: Repository Dispatch for building images
        uses: peter-evans/repository-dispatch@v2
        env:
          GITHUB_APPS_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          event-type: cron_trigger
          client-payload: '{"version": "master", "type": "cron_trigger", "img_list": "superbuild superbuild-tensorflow-cpu superbuild-tensorflow-gpu superbuild-pytorch superbuild-icubhead superbuild-icubhead-withuser superbuild-nvidia superbuild-nvidia-10.1 superbuild-gazebo blender gazebo superbuild-ros2"}'

  trigger_children_build:
      runs-on: [ubuntu-latest]
      needs: [build]
      if:  always() && ! cancelled()
      steps:
        # in the case where we are building "master" versions, we need to send a trigger that build only master, e.g.: "cron_trigger"
        - name: Repository Dispatch for master
          if: github.event.client_payload.type != 'repository_trigger'
          uses: peter-evans/repository-dispatch@v2
          with:
            token: ${{ secrets.GITHUB_TOKEN  }}
            repository: ${{ env.REPOSITORY_NAME }}
            event-type: cron_trigger
            client-payload: '{"type": "cron_trigger", "img_list": "${{ needs.check_files.outputs.children_matrix }}"}'

