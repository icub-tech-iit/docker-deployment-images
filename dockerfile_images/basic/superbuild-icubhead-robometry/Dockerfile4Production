#start from image passed by argument during build process. Usually it is an superbuild:full
ARG SOURCE_IMG="none"
ARG START_IMG="none"

ARG PROJECTS_DIR="/projects"
ARG USR_DIR="/usr"

FROM $SOURCE_IMG as builder
FROM $START_IMG as secondstage

LABEL maintainer="valentina.gaggero@iit.it, jacopo.losi@iit.it" 

ENV DEBIAN_FRONTEND=noninteractive


FROM $START_IMG
#to avoid interaction with tzdata configuration
ENV DEBIAN_FRONTEND=noninteractive

ARG PROJECTS_DIR
ARG USR_DIR

#install here all runtime dependencies if needed

# Copy the superbuild binary & entrypoint script from previous stage
COPY --from=builder ${PROJECTS_DIR} ${PROJECTS_DIR} 
COPY --from=builder ${USR_DIR} ${USR_DIR}

#The EXPOSE instruction does not actually publish the port. 
#It functions as a type of documentation between the person who builds the image and the person who runs the container, about which ports are intended to be published. 
#To actually publish the port when running the container, use the -p flag on docker run to publish and map one or more ports, or the -P flag to publish all exposed ports and map them to high-order ports.
EXPOSE 10000/tcp 10000/udp

# Some QT-Apps don't show controls without this
ENV QT_X11_NO_MITSHM 1
ENV YARP_COLORED_OUTPUT 1

ENTRYPOINT [ "/usr/local/bin/entrypoint.sh" ]

CMD ["bash"]

